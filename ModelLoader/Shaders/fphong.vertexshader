#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertex_normal;

flat out vec4 pixcolor;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main(){
	gl_Position = projection*view*model*vec4(vertexPosition_modelspace, 1.0);

    vec3 vert = vertexPosition_modelspace;
	vec3 normal =  mat3(transpose(inverse(model)))*vertex_normal;
	
	vec4 light_pos = vec4(0.0, -10.0, 10.0, 1.0);
	vec4 light_ambient = vec4(0.2, 0.2, 0.2, 1.0);
	vec4 light_diffuse = vec4(1.0, 1.0, 1.0, 1.0);
	vec4 light_specular = vec4(1.0, 1.0, 1.0, 1.0);
	
	vec4 mat_ambient = 0.5*vec4(normal,1.0);
	vec4 mat_diffuse = vec4(0.6, 0.6, 0.6, 1.0);
	vec4 mat_specular = vec4(0.2, 0.2, 0.2, 1.0);
	
	float mat_shininess = 30.0;
   
    pixcolor = vec4(0.0, 0.0, 0.0, 1.0);
	vec3 light_position = light_pos.xyz+vert;
	
	float intensity = dot(normalize(light_position), normalize(normal));
	vec3 reflection = reflect(normalize(-light_position),normalize(normal));
	float phong_intensity = dot(normalize(reflection), normalize(-vert));

	pixcolor +=  light_ambient * mat_ambient
			   + light_diffuse * clamp(mat_diffuse*max(intensity, 0.0), 0.0, 1.0)
			   + light_specular * clamp(mat_specular*pow(max(phong_intensity, 0.0),mat_shininess) ,0.0, 1.0);
}